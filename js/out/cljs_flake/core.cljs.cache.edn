;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name cljs-flake.core, :imports nil, :requires {turtle.core turtle.core, turtle.renderer.canvas turtle.renderer.canvas, flake cljs-flake.flake, cljs-flake.flake cljs-flake.flake}, :uses {->canvas turtle.renderer.canvas, draw! turtle.core}, :defs {combo1 {:protocol-inline nil, :meta {:file "/Users/ykar/Projects/private/clj-turtle/src/cljs_flake/core.cljs", :line 30, :column 7, :end-line 30, :end-column 13, :arglists (quote ([]))}, :name cljs-flake.core/combo1, :variadic false, :file "src/cljs_flake/core.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, ctx {:name cljs-flake.core/ctx, :file "src/cljs_flake/core.cljs", :line 65, :column 1, :end-line 65, :end-column 9, :meta {:file "/Users/ykar/Projects/private/clj-turtle/src/cljs_flake/core.cljs", :line 65, :column 6, :end-line 65, :end-column 9}}, rand-flake {:protocol-inline nil, :meta {:file "/Users/ykar/Projects/private/clj-turtle/src/cljs_flake/core.cljs", :line 13, :column 7, :end-line 13, :end-column 17, :arglists (quote ([flake]))}, :name cljs-flake.core/rand-flake, :variadic false, :file "src/cljs_flake/core.cljs", :end-column 17, :method-params ([flake]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([flake]))}, goto-random {:protocol-inline nil, :meta {:file "/Users/ykar/Projects/private/clj-turtle/src/cljs_flake/core.cljs", :line 19, :column 7, :end-line 19, :end-column 18, :arglists (quote ([]))}, :name cljs-flake.core/goto-random, :variadic false, :file "src/cljs_flake/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, max-height {:name cljs-flake.core/max-height, :file "src/cljs_flake/core.cljs", :line 7, :column 1, :end-line 7, :end-column 16, :meta {:file "/Users/ykar/Projects/private/clj-turtle/src/cljs_flake/core.cljs", :line 7, :column 6, :end-line 7, :end-column 16}}, combo2 {:protocol-inline nil, :meta {:file "/Users/ykar/Projects/private/clj-turtle/src/cljs_flake/core.cljs", :line 47, :column 7, :end-line 47, :end-column 13, :arglists (quote ([]))}, :name cljs-flake.core/combo2, :variadic false, :file "src/cljs_flake/core.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, scenery {:protocol-inline nil, :meta {:file "/Users/ykar/Projects/private/clj-turtle/src/cljs_flake/core.cljs", :line 55, :column 7, :end-line 55, :end-column 14, :arglists (quote ([]))}, :name cljs-flake.core/scenery, :variadic false, :file "src/cljs_flake/core.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, max-width {:name cljs-flake.core/max-width, :file "src/cljs_flake/core.cljs", :line 6, :column 1, :end-line 6, :end-column 15, :meta {:file "/Users/ykar/Projects/private/clj-turtle/src/cljs_flake/core.cljs", :line 6, :column 6, :end-line 6, :end-column 15}}, canvas {:name cljs-flake.core/canvas, :file "src/cljs_flake/core.cljs", :line 63, :column 1, :end-line 63, :end-column 12, :meta {:file "/Users/ykar/Projects/private/clj-turtle/src/cljs_flake/core.cljs", :line 63, :column 6, :end-line 63, :end-column 12}}, simple-flakes {:protocol-inline nil, :meta {:file "/Users/ykar/Projects/private/clj-turtle/src/cljs_flake/core.cljs", :line 41, :column 7, :end-line 41, :end-column 20, :arglists (quote ([]))}, :name cljs-flake.core/simple-flakes, :variadic false, :file "src/cljs_flake/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, rand-range {:protocol-inline nil, :meta {:file "/Users/ykar/Projects/private/clj-turtle/src/cljs_flake/core.cljs", :line 9, :column 8, :end-line 9, :end-column 18, :private true, :arglists (quote ([min max]))}, :private true, :name cljs-flake.core/rand-range, :variadic false, :file "src/cljs_flake/core.cljs", :end-column 18, :method-params ([min max]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 2, :fn-var true, :arglists (quote ([min max]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:down :color :up :blue :pen :right :origin :fwd}, :order [:origin :pen :up :fwd :right :down :color :blue]}, :doc nil}